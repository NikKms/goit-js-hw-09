{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,UAEa,CACXC,KAAMC,SAASC,cAAc,UAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAEF,MAAMC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,OAAOC,SAQzC,IANiBC,EACfC,OAAON,EAAMO,OACbD,OAAOL,EAAKM,OACZD,OAAOJ,EAAOK,SAGFC,SAAQ,CAACC,EAASC,KAC9BD,EACGE,MAAK,KACJC,EAAApB,GAASqB,OAAOC,QACd,uBAAqBJ,EAAY,QAASJ,OAAEN,EAAOO,WAAe,IAGrEQ,OAAM,KACLH,EAAApB,GAASqB,OAAOG,QACd,sBAAoBN,EAAU,QAASJ,OAAEN,EAAOO,WAAe,GAEjE,G,IAIR,MAAMU,EAAgBC,GACpB,IAAIC,SAAQ,CAACC,EAASC,KACpB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YACE,IACEH,EACIF,EAAQ,CAAEpB,MAAOkB,IACjBG,EAAO,CAAErB,MAAOkB,KACtBA,EACD,IAGCb,EAAmB,CAACL,EAAOC,EAAMC,KACrC,MAAMwB,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIzB,EAAQyB,GAAK,EAAG,CAClC,MAAMT,EAAelB,EAAQ2B,EAAI1B,EACjCyB,EAASE,KAAKX,EAAcC,G,CAE9B,OAAOQ,CAAQ","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form'),\n};\n\nrefs.form.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n  const { delay, step, amount } = e.target.elements;\n\n  const promises = generatePromises(\n    Number(delay.value),\n    Number(step.value),\n    Number(amount.value)\n  );\n\n  [...promises].forEach((promise, position) => {\n    promise\n      .then(() => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position + 1} in ${Number(delay.value)}ms`\n        );\n      })\n      .catch(() => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position + 1} in ${Number(delay.value)}ms`\n        );\n      });\n  });\n}\n\nconst createPromise = promiseDelay =>\n  new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(\n      () =>\n        shouldResolve\n          ? resolve({ delay: promiseDelay })\n          : reject({ delay: promiseDelay }),\n      promiseDelay\n    );\n  });\n\nconst generatePromises = (delay, step, amount) => {\n  const promises = [];\n  for (let i = 0; i < amount; i += 1) {\n    const promiseDelay = delay + i * step;\n    promises.push(createPromise(promiseDelay));\n  }\n  return promises;\n};\n"],"names":["$7Y9D8","parcelRequire","form","document","querySelector","addEventListener","e","preventDefault","delay","step","amount","target","elements","$47d4ff9957288465$var$generatePromises","Number","value","forEach","promise","position","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$createPromise","promiseDelay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","promises","i","push"],"version":3,"file":"03-promises.0dc0d6e7.js.map"}